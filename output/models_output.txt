TEMPERATURE
month
1


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.876838379730111

 BEST SCORE R squared 
0.8821932327853236

 F REGRESSION 
[  0.53394185  45.29189931 149.92391182]
[4.67464601e-01 4.33356923e-09 7.33620873e-19]

 MUTUAL INFORMATION REGRESSION 
[0.37578663 0.40517672 1.        ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=SVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                           epsilon=0.1, gamma='scale', kernel='rbf',
                           max_iter=-1, shrinking=True, tol=0.001,
                           verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'C': [1, 0.95, 0.9, 0.8],
                         'epsilon': [0.1, 0.05, 0.15, 0.2, 0.5],
                         'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
TEMPERATURE
month
2


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.9454984550981129

 BEST SCORE R squared 
0.947902935020255

 F REGRESSION 
[  0.74969775  45.44545504 208.37371725]
[3.89661909e-01 4.38649596e-09 3.03335381e-22]

 MUTUAL INFORMATION REGRESSION 
[0.3160847  0.38899252 1.        ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
TEMPERATURE
month
3


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.9291869064192557

 BEST SCORE R squared 
0.9324056834001986

 F REGRESSION 
[  0.88586011  37.50267103 223.90645476]
[3.50086537e-01 5.92017688e-08 9.82583790e-23]

 MUTUAL INFORMATION REGRESSION 
[0.29988144 0.40649762 1.        ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
TEMPERATURE
month
4


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.895697988238793

 BEST SCORE R squared 
0.9005871450400995

 F REGRESSION 
[1.16928227e-01 3.72592535e+01 2.34715129e+02]
[7.33528333e-01 7.05725990e-08 6.38115571e-23]

 MUTUAL INFORMATION REGRESSION 
[0.12490071 0.31694138 1.        ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
TEMPERATURE
month
5


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.7751161338330511

 BEST SCORE R squared 
0.7856575650596268

 F REGRESSION 
[  0.39589335  23.75720999 230.92219986]
[5.31492793e-01 7.72974873e-06 9.57264880e-23]

 MUTUAL INFORMATION REGRESSION 
[0.27341497 0.25631404 1.        ]

 BEST ESTIMATOR 
OrthogonalMatchingPursuitCV(copy=True, cv=10, fit_intercept=True, max_iter=None,
                            n_jobs=-1, normalize=True, verbose=False)

log(1 + x)? 
False
########################################################
TEMPERATURE
month
6


 Used features 
['CooX', 'CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.7301590195663656

 BEST SCORE R squared 
0.7422414515260807

 F REGRESSION 
[  4.70927898   9.74657564 176.89644126]
[3.36042924e-02 2.66614488e-03 2.41587195e-20]

 MUTUAL INFORMATION REGRESSION 
[0.44905065 0.2584809  1.        ]

 BEST ESTIMATOR 
MultiTaskElasticNetCV(alphas=None, copy_X=True, cv=10, eps=0.001,
                      fit_intercept=True,
                      l1_ratio=[0.1, 0.3, 0.5, 0.6, 0.7, 0.8, 0.85, 0.87, 0.9,
                                0.93, 0.95, 0.97, 0.99],
                      max_iter=1000, n_alphas=100, n_jobs=-1, normalize=False,
                      random_state=None, selection='cyclic', tol=0.0001,
                      verbose=0)

log(1 + x)? 
False
########################################################
TEMPERATURE
month
7


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.6886459988016722

 BEST SCORE R squared 
0.7025872227359257

 F REGRESSION 
[  2.29657182  12.76352617 155.91380144]
[1.34434860e-01 6.66029502e-04 4.84592261e-19]

 MUTUAL INFORMATION REGRESSION 
[0.35615021 0.22711031 1.        ]

 BEST ESTIMATOR 
OrthogonalMatchingPursuitCV(copy=True, cv=10, fit_intercept=True, max_iter=None,
                            n_jobs=-1, normalize=True, verbose=False)

log(1 + x)? 
False
########################################################
TEMPERATURE
month
8


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.7413970145012485

 BEST SCORE R squared 
0.7531516956602826

 F REGRESSION 
[  1.00534775  15.02305459 198.31961313]
[3.19738096e-01 2.49816221e-04 2.02885823e-21]

 MUTUAL INFORMATION REGRESSION 
[0.2816173  0.20052199 1.        ]

 BEST ESTIMATOR 
OrthogonalMatchingPursuitCV(copy=True, cv=10, fit_intercept=True, max_iter=None,
                            n_jobs=-1, normalize=True, verbose=False)

log(1 + x)? 
False
########################################################
TEMPERATURE
month
9


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.8683953949108574

 BEST SCORE R squared 
0.8742881384223116

 F REGRESSION 
[1.94976264e-01 2.62424154e+01 2.21881202e+02]
[6.60250119e-01 2.82420651e-06 8.63177559e-23]

 MUTUAL INFORMATION REGRESSION 
[0.15538437 0.25202057 1.        ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
TEMPERATURE
month
10


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.8656330300208133

 BEST SCORE R squared 
0.8714750721938214

 F REGRESSION 
[3.99890234e-02 2.91445918e+01 2.07323223e+02]
[8.42098874e-01 9.22848199e-07 2.47925024e-22]

 MUTUAL INFORMATION REGRESSION 
[0.10767599 0.30071627 1.        ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
TEMPERATURE
month
11


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.9014753178008107

 BEST SCORE R squared 
0.9057589996355581

 F REGRESSION 
[1.88439679e-02 3.68099141e+01 2.11148384e+02]
[8.91220396e-01 6.48818835e-08 1.54755246e-22]

 MUTUAL INFORMATION REGRESSION 
[0.19532874 0.42720904 1.        ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
TEMPERATURE
month
12


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.8963580513127937

 BEST SCORE R squared 
0.900799849113674

 F REGRESSION 
[  0.69676676  43.18480473 179.04484004]
[4.06753070e-01 7.87993710e-09 7.55789681e-21]

 MUTUAL INFORMATION REGRESSION 
[0.37968846 0.4745943  1.        ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################

"########################################################
HUMIDITY
month
1


 Used features 
['CooX', 'CooY']

 BEST SCORE adjusted R squared 
0.8258084962839999

 BEST SCORE R squared 
0.8421389497573749

 F REGRESSION 
[23.92132966 32.26615768  0.9868347 ]
[2.93523563e-05 3.05519245e-06 3.28208428e-01]

 MUTUAL INFORMATION REGRESSION 
[1.         0.37923819 0.36605702]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=SVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                           epsilon=0.1, gamma='scale', kernel='rbf',
                           max_iter=-1, shrinking=True, tol=0.001,
                           verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'C': [1, 0.95, 0.9, 0.8],
                         'epsilon': [0.1, 0.05, 0.15, 0.2, 0.5],
                         'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
True
########################################################
HUMIDITY
month
2


 Used features 
['CooX', 'CooY']

 BEST SCORE adjusted R squared 
0.5316707767835198

 BEST SCORE R squared 
0.5755766414600648

 F REGRESSION 
[19.36137135 41.64997476  1.51730011]
[1.18808720e-04 3.39780860e-07 2.27290856e-01]

 MUTUAL INFORMATION REGRESSION 
[1.         0.51581669 0.43812704]

 BEST ESTIMATOR 
LarsCV(copy_X=True, cv=10, eps=2.220446049250313e-16, fit_intercept=True,
       max_iter=500, max_n_alphas=1000, n_jobs=-1, normalize=True,
       precompute='auto', verbose=False)

log(1 + x)? 
False
########################################################
HUMIDITY
month
3


 Used features 
['CooX', 'CooY']

 BEST SCORE adjusted R squared 
0.5794134077186873

 BEST SCORE R squared 
0.6165239893905679

 F REGRESSION 
[39.23375026 37.94425783  0.50163238]
[4.44934864e-07 6.03115273e-07 4.83756907e-01]

 MUTUAL INFORMATION REGRESSION 
[1.         0.45685629 0.38551853]

 BEST ESTIMATOR 
MultiTaskElasticNetCV(alphas=None, copy_X=True, cv=10, eps=0.001,
                      fit_intercept=True,
                      l1_ratio=[0.1, 0.3, 0.5, 0.6, 0.7, 0.8, 0.85, 0.87, 0.9,
                                0.93, 0.95, 0.97, 0.99],
                      max_iter=1000, n_alphas=100, n_jobs=-1, normalize=False,
                      random_state=None, selection='cyclic', tol=0.0001,
                      verbose=0)

log(1 + x)? 
True
########################################################
HUMIDITY
month
4


 Used features 
['CooX', 'CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.869186112640126

 BEST SCORE R squared 
0.8814499145801142

 F REGRESSION 
[54.97780509 92.46690651 11.78693357]
[2.37590639e-08 8.09654916e-11 1.71303487e-03]

 MUTUAL INFORMATION REGRESSION 
[1.         0.52801383 0.24581998]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=SVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                           epsilon=0.1, gamma='scale', kernel='rbf',
                           max_iter=-1, shrinking=True, tol=0.001,
                           verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'C': [1, 0.95, 0.9, 0.8],
                         'epsilon': [0.1, 0.05, 0.15, 0.2, 0.5],
                         'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
HUMIDITY
month
5


 Used features 
['CooX', 'CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.7654804652411455

 BEST SCORE R squared 
0.7881759040887767

 F REGRESSION 
[ 7.45832271 20.1390149  11.27690815]
[1.04712061e-02 9.85445945e-05 2.14724248e-03]

 MUTUAL INFORMATION REGRESSION 
[1.         0.51638786 0.38410954]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=SVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                           epsilon=0.1, gamma='scale', kernel='rbf',
                           max_iter=-1, shrinking=True, tol=0.001,
                           verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'C': [1, 0.95, 0.9, 0.8],
                         'epsilon': [0.1, 0.05, 0.15, 0.2, 0.5],
                         'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
HUMIDITY
month
6


 Used features 
['CooX', 'CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.6422944707205367

 BEST SCORE R squared 
0.6769111348443557

 F REGRESSION 
[ 5.70809453 16.78212676 25.06121252]
[2.33764620e-02 2.92621179e-04 2.28977381e-05]

 MUTUAL INFORMATION REGRESSION 
[1.         0.16831743 0.96316419]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
HUMIDITY
month
7


 Used features 
['CooX', 'CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.41531237050828984

 BEST SCORE R squared 
0.47378113345746087

 F REGRESSION 
[ 8.25758577 19.12452781 15.70137061]
[0.00751874 0.00014408 0.00044291]

 MUTUAL INFORMATION REGRESSION 
[1.         0.37877166 0.94987522]

 BEST ESTIMATOR 
OrthogonalMatchingPursuitCV(copy=True, cv=10, fit_intercept=True, max_iter=None,
                            n_jobs=-1, normalize=True, verbose=False)

log(1 + x)? 
True
########################################################
HUMIDITY
month
8


 Used features 
['CooX', 'CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.7290215946587598

 BEST SCORE R squared 
0.7561194351928838

 F REGRESSION 
[12.77995651 23.93359952 11.50959407]
[1.25125405e-03 3.42275474e-05 2.01916041e-03]

 MUTUAL INFORMATION REGRESSION 
[1.         0.94173333 0.8918866 ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
HUMIDITY
month
9


 Used features 
['CooX', 'CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.7858770521041798

 BEST SCORE R squared 
0.8080277018865061

 F REGRESSION 
[17.40891026 37.49457837 13.03205805]
[2.64239755e-04 1.31429736e-06 1.18287323e-03]

 MUTUAL INFORMATION REGRESSION 
[0.83276658 1.         0.87264995]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
HUMIDITY
month
10


 Used features 
['CooX', 'CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.6926817682146567

 BEST SCORE R squared 
0.7214928524445325

 F REGRESSION 
[30.32420321 58.79651171  9.86467287]
[5.02222614e-06 1.19839214e-08 3.68916285e-03]

 MUTUAL INFORMATION REGRESSION 
[0.8679907  1.         0.61991882]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=SVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                           epsilon=0.1, gamma='scale', kernel='rbf',
                           max_iter=-1, shrinking=True, tol=0.001,
                           verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'C': [1, 0.95, 0.9, 0.8],
                         'epsilon': [0.1, 0.05, 0.15, 0.2, 0.5],
                         'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
HUMIDITY
month
11


 Used features 
['CooX', 'CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.8720873374230148

 BEST SCORE R squared 
0.8840791495396072

 F REGRESSION 
[25.27718767 44.89400094  9.53100553]
[1.98419536e-05 1.70206933e-07 4.23424069e-03]

 MUTUAL INFORMATION REGRESSION 
[1.         0.66950052 0.15008574]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
HUMIDITY
month
12


 Used features 
['CooX', 'CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.8221203628976913

 BEST SCORE R squared 
0.839334521326947

 F REGRESSION 
[27.40401733 59.94060382 12.60035681]
[1.20001583e-05 1.22687163e-08 1.29389005e-03]

 MUTUAL INFORMATION REGRESSION 
[1.         0.88560123 0.5761288 ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=SVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                           epsilon=0.1, gamma='scale', kernel='rbf',
                           max_iter=-1, shrinking=True, tol=0.001,
                           verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'C': [1, 0.95, 0.9, 0.8],
                         'epsilon': [0.1, 0.05, 0.15, 0.2, 0.5],
                         'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
True
########################################################

"########################################################
PRECIPITATION
month
1


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.7859298017208511

 BEST SCORE R squared 
0.7906519384475971

 F REGRESSION 
[  0.39436019 144.10627778  10.81208123]
[5.31077240e-01 4.83806776e-23 1.28585374e-03]

 MUTUAL INFORMATION REGRESSION 
[0.6694321  0.55364044 1.        ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
PRECIPITATION
month
2


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.5187556507524227

 BEST SCORE R squared 
0.5294499696245911

 F REGRESSION 
[ 2.87324827 53.17084755  9.80004997]
[9.23854898e-02 2.39447897e-11 2.14253016e-03]

 MUTUAL INFORMATION REGRESSION 
[0.85999877 0.42711428 1.        ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
PRECIPITATION
month
3


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.7178560392789305

 BEST SCORE R squared 
0.7240798031183658

 F REGRESSION 
[  1.49610128 123.65005773  11.10371648]
[2.23403049e-01 8.55583914e-21 1.11178715e-03]

 MUTUAL INFORMATION REGRESSION 
[0.52470458 0.64031474 1.        ]

 BEST ESTIMATOR 
RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mae',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=5, min_weight_fraction_leaf=0.02,
                      n_estimators=50, n_jobs=None, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)

log(1 + x)? 
False
########################################################
PRECIPITATION
month
4


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.5023577684792961

 BEST SCORE R squared 
0.5135827812203646

 F REGRESSION 
[ 0.85518851 56.66113747  9.67195107]
[3.56776166e-01 7.20468539e-12 2.29286792e-03]

 MUTUAL INFORMATION REGRESSION 
[0.87559894 0.5020785  1.        ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
False
########################################################
PRECIPITATION
month
5


 Used features 
['CooX', 'CooZ']

 BEST SCORE adjusted R squared 
0.14458898917109142

 BEST SCORE R squared 
0.16388397437775848

 F REGRESSION 
[7.34876986 1.98288848 6.85940322]
[0.00760342 0.1614373  0.00984933]

 MUTUAL INFORMATION REGRESSION 
[0.78395154 0.79595757 1.        ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=NuSVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                             gamma='scale', kernel='rbf', max_iter=-1, nu=0.5,
                             shrinking=True, tol=0.001, verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
True
########################################################
PRECIPITATION
month
6


 Used features 
['CooY', 'CooX']

 BEST SCORE adjusted R squared 
-0.001676309650252561

 BEST SCORE R squared 
0.02074927937176796

 F REGRESSION 
[1.29327433 2.81812829 0.16965231]
[0.25749009 0.09555305 0.68108406]

 MUTUAL INFORMATION REGRESSION 
[1.         0.16927884 0.14393133]

 BEST ESTIMATOR 
OrthogonalMatchingPursuitCV(copy=True, cv=10, fit_intercept=True, max_iter=None,
                            n_jobs=-1, normalize=True, verbose=False)

log(1 + x)? 
False
########################################################
PRECIPITATION
month
7


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.014289376458685443

 BEST SCORE R squared 
0.036523450673902905

 F REGRESSION 
[0.03257317 1.72315482 1.70347996]
[0.85705225 0.19156518 0.19410403]

 MUTUAL INFORMATION REGRESSION 
[1.         0.13887118 0.        ]

 BEST ESTIMATOR 
MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(25, 25), learning_rate='adaptive',
             learning_rate_init=0.001, max_fun=15000, max_iter=50, momentum=0.9,
             n_iter_no_change=15, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='sgd', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False)

log(1 + x)? 
False
########################################################
PRECIPITATION
month
8


 Used features 
['CooZ', 'CooY']

 BEST SCORE adjusted R squared 
0.1745188831803861

 BEST SCORE R squared 
0.19327981765355917

 F REGRESSION 
[1.11494738 1.70940545 2.75372759]
[0.29295245 0.19335257 0.09942015]

 MUTUAL INFORMATION REGRESSION 
[0.56032785 0.54910162 1.        ]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=SVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                           epsilon=0.1, gamma='scale', kernel='rbf',
                           max_iter=-1, shrinking=True, tol=0.001,
                           verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'C': [1, 0.95, 0.9, 0.8],
                         'epsilon': [0.1, 0.05, 0.15, 0.2, 0.5],
                         'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
True
########################################################
PRECIPITATION
month
9


 Used features 
['CooZ', 'CooX']

 BEST SCORE adjusted R squared 
0.017178223763549938

 BEST SCORE R squared 
0.03934713600948492

 F REGRESSION 
[2.37535896 1.20669497 3.00807458]
[0.12565717 0.27398729 0.0851851 ]

 MUTUAL INFORMATION REGRESSION 
[1.         0.         0.45717547]

 BEST ESTIMATOR 
GridSearchCV(cv=10, error_score=nan,
             estimator=SVR(C=1.0, cache_size=200, coef0=0.0, degree=3,
                           epsilon=0.1, gamma='scale', kernel='rbf',
                           max_iter=-1, shrinking=True, tol=0.001,
                           verbose=False),
             iid='deprecated', n_jobs=-1,
             param_grid={'C': [1, 0.95, 0.9, 0.8],
                         'epsilon': [0.1, 0.05, 0.15, 0.2, 0.5],
                         'kernel': ['linear', 'poly', 'rbf', 'sigmoid']},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring=None, verbose=0)

log(1 + x)? 
True
########################################################
PRECIPITATION
month
10


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.020474035597075835

 BEST SCORE R squared 
0.04256860622270575

 F REGRESSION 
[0.45087256 5.86888633 0.57276683]
[0.50309429 0.01676767 0.45051026]

 MUTUAL INFORMATION REGRESSION 
[1.         0.72953714 0.41898972]

 BEST ESTIMATOR 
OrthogonalMatchingPursuitCV(copy=True, cv=10, fit_intercept=True, max_iter=None,
                            n_jobs=-1, normalize=True, verbose=False)

log(1 + x)? 
False
########################################################
PRECIPITATION
month
11


 Used features 
['CooY', 'CooX']

 BEST SCORE adjusted R squared 
0.398059693225824

 BEST SCORE R squared 
0.41163729413050465

 F REGRESSION 
[ 2.52104726 29.85260641  1.99268857]
[1.14728469e-01 2.24160246e-07 1.60412918e-01]

 MUTUAL INFORMATION REGRESSION 
[0.93569994 1.         0.65792455]

 BEST ESTIMATOR 
MLPRegressor(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(50, 50, 50, 50), learning_rate='adaptive',
             learning_rate_init=0.001, max_fun=15000, max_iter=100,
             momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
             power_t=0.5, random_state=None, shuffle=True, solver='lbfgs',
             tol=0.0001, validation_fraction=0.1, verbose=False,
             warm_start=False)

log(1 + x)? 
False
########################################################
PRECIPITATION
month
12


 Used features 
['CooY', 'CooZ']

 BEST SCORE adjusted R squared 
0.48428404426411487

 BEST SCORE R squared 
0.4956601315229947

 F REGRESSION 
[ 2.21040526 65.79054549  4.24805383]
[1.39414462e-01 2.71854897e-13 4.12147206e-02]

 MUTUAL INFORMATION REGRESSION 
[0.66121691 0.85424873 1.        ]

 BEST ESTIMATOR 
MLPRegressor(activation='tanh', alpha=0.0005, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(50, 50, 50, 50), learning_rate='adaptive',
             learning_rate_init=0.001, max_fun=15000, max_iter=200,
             momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
             power_t=0.5, random_state=None, shuffle=True, solver='lbfgs',
             tol=0.0001, validation_fraction=0.1, verbose=False,
             warm_start=False)

log(1 + x)? 
False
########################################################

"########################################################
